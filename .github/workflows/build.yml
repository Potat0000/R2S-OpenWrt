#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: Mod from P3TERX
# For NanoPi R2S org
#=================================================

name: OpenWrt R2S

on:
  push:
    branches:
      - master
  watch:
    types: started

env:
  SSH_ACTIONS: false
  TZ: Asia/Shanghai

jobs:
    build:
      runs-on: ubuntu-18.04
      if: github.event.repository.owner.id == github.event.sender.id

      steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Set Username
        id: set_name
        run: |
          if [ "$GITHUB_ACTOR" = "gyj1109" ];then
            echo "##[set-output name=username;]Gyj1109"
          else
            echo "##[set-output name=username;]`echo $GITHUB_REPOSITORY | cut -d / -f 2`"
          fi

      - name: Init build dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update -y
          sudo -E apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo -E apt-get autoremove -y --purge
          sudo -E apt-get clean -y
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Free Disk Space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Prepare Mixedwrt
        run: |
          sudo chown -R runner:runner /home/runner/work/R2S-OpenWrt
          cp -r ./script/. ./
          /bin/bash 01_get_ready.sh

      - name: Prepare Package
        run: |
          cd openwrt
          cp -r ../script/. ./
          /bin/bash 02_prepare_package.sh

      - name: Convert Translation
        run: |
          cd openwrt
          /bin/bash 03_convert_translation.sh

      - name: Remove Upx
        run: |
          cd openwrt
          /bin/bash 04_remove_upx.sh

      - name: Add ACL
        run: |
          cd openwrt
          /bin/bash 05_create_acl_for_luci.sh -a

      - name: Make Config
        run: |
          cd openwrt
          mv ../origin.seed .config
          make defconfig
          chmod -R 755 ./

      - name: Set Build Time
        id: set_time
        run: |
          build_time=$(date +%Y-%m-%dT%H-%M)
          echo -e "\033[32m\033[1m$build_time\033[0m"
          echo "##[set-output name=build_time;]$build_time"
          sed -i s/BUILDVERSION/$build_time/g openwrt/package/lean/lean-translate/files/zzz-default-settings

      - name: Setup Debug Session
        if: env.SSH_ACTIONS == 'true'
        uses: P3TERX/debugger-action@master


      - name: Make Download
        run: |
          cd openwrt
          make download -j10

      - name: Make Toolchain
        run: |
          cd openwrt
          let make_process=$(nproc)+1
          make toolchain/install -j${make_process} V=s

      - name: Compile Openwrt
        run: |
          cd openwrt
          let make_process=$(nproc)+1
          make -j${make_process} V=s || make -j${make_process} V=s || make -j1 V=s

      - name: Organize Files
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/rockchip/armv8/*squashfs-sysupgrade.img* ./artifact/
          cd ./artifact/
          gzip -d *.gz && exit 0
          gzip *.img
          cd ../openwrt
          cp .config ../artifact/config.seed
          ./scripts/diffconfig.sh > ../artifact/config.slim.seed
          cd ../artifact
          zip ../OpenWrt-R2S-${{ steps.set_name.outputs.username }}-${{ steps.set_time.outputs.build_time }}-ROM.zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt-R2S-${{ steps.set_name.outputs.username }}-${{ steps.set_time.outputs.build_time }}
          path: ./artifact/

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "OpenWrt-R2S-${{ steps.set_name.outputs.username }}-*-ROM.zip,artifact/config.seed"
          body: Built at ${{ steps.set_time.outputs.build_time }}
          commit: ${{ github.sha }}
          name: OpenWrt-R2S-${{ steps.set_name.outputs.username }}-${{ steps.set_time.outputs.build_time }}
          tag: ${{ steps.set_time.outputs.build_time }}
          token: ${{ secrets.sec_token }}
